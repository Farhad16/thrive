[{"F:\\Personal Work\\thrive\\thrive-edtech\\src\\index.js":"1","F:\\Personal Work\\thrive\\thrive-edtech\\src\\App.js":"2","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\store.js":"3","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Repo\\Repo.js":"4","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Login\\Login.js":"5","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Profile\\Profile.js":"6","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\rootReducer.js":"7","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Repo\\Routine.js":"8","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Navbar\\Navbar.js":"9","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Profile\\UserProfile.js":"10","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userReducer.js":"11","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userActions.js":"12","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userTypes.js":"13","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoReducer.js":"14","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoTypes.js":"15","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoActions.js":"16","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Home\\Home.js":"17"},{"size":220,"mtime":1610900088604,"results":"18","hashOfConfig":"19"},{"size":839,"mtime":1611158456935,"results":"20","hashOfConfig":"19"},{"size":336,"mtime":1609003988095,"results":"21","hashOfConfig":"19"},{"size":271,"mtime":1611076313765,"results":"22","hashOfConfig":"19"},{"size":1648,"mtime":1611060749580,"results":"23","hashOfConfig":"19"},{"size":293,"mtime":1610983158379,"results":"24","hashOfConfig":"19"},{"size":255,"mtime":1611071263906,"results":"25","hashOfConfig":"19"},{"size":2853,"mtime":1611077375493,"results":"26","hashOfConfig":"19"},{"size":245,"mtime":1611159214477,"results":"27","hashOfConfig":"19"},{"size":1968,"mtime":1611159303213,"results":"28","hashOfConfig":"19"},{"size":751,"mtime":1611062372623,"results":"29","hashOfConfig":"19"},{"size":878,"mtime":1611062639028,"results":"30","hashOfConfig":"19"},{"size":218,"mtime":1611061224211,"results":"31","hashOfConfig":"19"},{"size":750,"mtime":1611075415088,"results":"32","hashOfConfig":"19"},{"size":234,"mtime":1611071148200,"results":"33","hashOfConfig":"19"},{"size":1143,"mtime":1611075426882,"results":"34","hashOfConfig":"19"},{"size":394,"mtime":1611158376779,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"hozg1o",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Personal Work\\thrive\\thrive-edtech\\src\\index.js",[],["75","76"],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\App.js",["77"],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\store.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Repo\\Repo.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Login\\Login.js",["78","79"],"import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport newton from '../../assets/icons/newton.svg'\r\nimport book from '../../assets/images/book.svg'\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [loginData, setLoginData] = useState({})\r\n  const { handleSubmit } = useForm();\r\n  const history = useHistory();\r\n\r\n  const handleBlur = (e) => {\r\n    const newInfo = { ...loginData }\r\n    newInfo[e.target.name] = e.target.value;\r\n    setLoginData(newInfo)\r\n  }\r\n\r\n  const onSubmit = (data, e) => {\r\n    if (loginData.id === 'admin' && loginData.pin === 'admin') {\r\n      alert('Successfully login');\r\n      history.replace(\"/profile\")\r\n      e.target.reset();\r\n    } else {\r\n      alert(\"Id and Pin must be 'admin'\");\r\n    }\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <img className=\"img-newton\" src={newton} alt=\"newton\" />\r\n      <img className=\"img-book\" src={book} alt=\"book\" />\r\n      <p className=\"note\">\r\n        Please find the ID and PIN from SMS. Donâ€™t share your ID or PIN with anyone.\r\n      </p>\r\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n        <label htmlFor=\"\">\r\n          ID <br />\r\n          <input type=\"text\" name=\"id\" onBlur={handleBlur} required /><br />\r\n        </label>\r\n        <label htmlFor=\"\">\r\n          PIN <br />\r\n          <input type=\"text\" name=\"pin\" onBlur={handleBlur} required /><br />\r\n        </label>\r\n        <button className=\"login-btn\" type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Profile\\Profile.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\rootReducer.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Repo\\Routine.js",["80"],"import React, { useEffect } from 'react';\r\nimport routine from '../../assets/icons/routine.svg';\r\nimport classIcon from '../../assets/icons/classIcon.svg';\r\nimport arrow from '../../assets/icons/arrow.svg';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRepos } from '../../redux/repo/repoActions';\r\n\r\nconst Routine = ({ loading, routines, fetchRepos }) => {\r\n\r\n  useEffect(() => {\r\n    fetchRepos()\r\n  }, [])\r\n\r\n  const returnDate = mydate => {\r\n    const givenDate = mydate.toString().split('T')[0];\r\n    const dateInString = new Date(givenDate);\r\n    const onlyDate = dateInString.getDate();\r\n    const months = [\r\n      \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n    ];\r\n    const onlyMonth = dateInString.getMonth();\r\n    const dayAndMonth = `${onlyDate} ${months[onlyMonth]}`\r\n    return dayAndMonth;\r\n  }\r\n\r\n  return (\r\n    <div className=\"routine-container\">\r\n      <div className=\"routine-icon\">\r\n        <img src={routine} alt=\"\" />\r\n        <p>\r\n          Routine\r\n        </p>\r\n      </div>\r\n      <div className=\"nextClass-container\">\r\n        <div className=\"nextClass-header\">\r\n          <h3>Next Class</h3>\r\n          <h3><small>Time Left: </small> <span>2:30:41</span></h3>\r\n        </div>\r\n        <div className=\"nextClass-content\">\r\n          <h4 className=\"class-name\">Physics Solve Class</h4>\r\n          <h4 className=\"class-time\">2:00 PM</h4>\r\n          <p className=\"class-date\">19 Apr 2020 (Sunday)</p>\r\n          <button className=\"join-now\">Join Now</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"first-layer\">\r\n        <div className=\"second-layer\">\r\n          <div className=\"third-layer\">\r\n            <h2>MAY 2020</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {\r\n        routines.map(routine => <div className=\"classes\" key={routine.id}>\r\n          <div className=\"date\">\r\n            <span>\r\n              {returnDate(routine.created_at)}\r\n            </span>\r\n          </div>\r\n          <div className=\"schedule\">\r\n            <div className=\"subject-time\">\r\n              <p>{routine.name}</p>\r\n              <p>{routine.language}</p>\r\n              <p>2:00pm - 3:30pm</p>\r\n            </div>\r\n            <div className=\"classOrExam\">\r\n              <img src={arrow} alt=\"\" />\r\n              <div className=\"class-exam\">\r\n                <img src={classIcon} alt=\"\" />\r\n                <small>Class</small>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.users.loading,\r\n    routines: state.repos.routine,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchRepos: () => dispatch(fetchRepos()),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Routine)\r\n","F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Navbar\\Navbar.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Profile\\UserProfile.js",["81"],"import React, { useEffect } from 'react';\r\nimport homeIcon from '../../assets/icons/home.svg';\r\nimport editIcon from '../../assets/icons/editIcon.svg';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../redux/user/userActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserProfile = ({ loading, userData, fetchUser }) => {\r\n\r\n  useEffect(() => {\r\n    fetchUser()\r\n  }, [])\r\n\r\n  console.log(userData);\r\n\r\n  return (\r\n    <div className=\"userProfile\">\r\n      <div className=\"showPath\">\r\n        <img src={homeIcon} alt=\"\" />\r\n        <p>\r\n          <span className=\"homeText\"><Link to=\"home\">Home</Link></span>&#x3e;<strong className=\"profileText\">Profile</strong>\r\n        </p>\r\n      </div>\r\n      <img className=\"profile-pic\" src={userData.avatar_url} alt=\"\" />\r\n      <button className=\"edit-btn\">\r\n        <img src={editIcon} alt=\"\" />\r\n        Edit\r\n      </button>\r\n      <h5 className=\"name\">{userData.name}</h5>\r\n      <div className=\"about\">\r\n        <p>{userData.type}</p>\r\n        <p>{userData.location}</p>\r\n        <p>{userData.company}</p>\r\n      </div>\r\n      <div className=\"email-pass\">\r\n        <h5>Email:\r\n          <span>\r\n            {userData.email ? userData.email : 'There is no email'}\r\n          </span>\r\n        </h5>\r\n        <button className=\"change-btn\">Change</button>\r\n      </div>\r\n      <div className=\"email-pass\">\r\n        <h5>Password: <span>{userData.password ? userData.password : '***********'}</span></h5>\r\n        <button className=\"change-btn\">Change</button>\r\n      </div>\r\n      <button className=\"logout-btn\">\r\n        Log Out\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.users.loading,\r\n    userData: state.users.user,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    fetchUser: () => dispatch(fetchUser()),\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UserProfile)\r\n","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userReducer.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userActions.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\user\\userTypes.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoReducer.js",["82"],"\r\nimport {\r\n  FETCH_REPOS_REQUEST,\r\n  FETCH_REPOS_SUCCESS,\r\n  FETCH_REPOS_FAILURE,\r\n  FETCH_REPOS_BY_DATE,\r\n} from \"./repoTypes\"\r\n\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  routine: [],\r\n  error: '',\r\n}\r\n\r\nconst productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_REPOS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case FETCH_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        routine: action.payload,\r\n        error: '',\r\n      }\r\n    case FETCH_REPOS_FAILURE:\r\n      return {\r\n        loading: false,\r\n        routine: [],\r\n        error: action.payload\r\n      }\r\n    default: return state\r\n  }\r\n}\r\n\r\nexport default productReducer","F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoTypes.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\redux\\repo\\repoActions.js",[],"F:\\Personal Work\\thrive\\thrive-edtech\\src\\components\\Home\\Home.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":7,"column":3,"nodeType":"89","messageId":"90","endLine":7,"endColumn":7},{"ruleId":"87","severity":1,"message":"88","line":6,"column":10,"nodeType":"89","messageId":"90","endLine":6,"endColumn":14},{"ruleId":"87","severity":1,"message":"91","line":6,"column":28,"nodeType":"89","messageId":"90","endLine":6,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":12,"column":6,"nodeType":"94","endLine":12,"endColumn":8,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":12,"column":6,"nodeType":"94","endLine":12,"endColumn":8,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"98","line":6,"column":3,"nodeType":"89","messageId":"90","endLine":6,"endColumn":22},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRepos'. Either include it or remove the dependency array. If 'fetchRepos' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array. If 'fetchUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"'FETCH_REPOS_BY_DATE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchRepos]",{"range":"107","text":"108"},"Update the dependencies array to be: [fetchUser]",{"range":"109","text":"110"},[414,416],"[fetchRepos]",[402,404],"[fetchUser]"]